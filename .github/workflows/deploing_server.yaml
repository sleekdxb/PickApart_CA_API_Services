name: Deploy â€” Laravel microservices to cPanel (production)

on:
  push:
    branches: [main]
    paths:
      - "Authentication_Service/**"
      - "Data_Amendment_Service/**"
      - "Encryption_Service/**"
      - "Files_Magangment_Service/**"
      - "Garage_Service/**"
      - "Mailing_Service/**"
      - "Membership_Service/**"
      - "Parts_Service/**"
      - "Vendor_Service/**"
      - "Notification_Service/**"
      - "Managment_Service_Ca_Vds/**"
      - "Vendor_Service_Ca_Vds/**"
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy ${{ matrix.service }}
    environment: production
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
    concurrency:
      group: deploy-${{ matrix.service }}-prod-${{ github.ref_name }}
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        include:
          # --- Host 178.16.134.117 (most services) ---
          - service: Authentication_Service
            url: https://test-api-authentication-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Data_Amendment_Service
            url: https://test-api-amendment-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Encryption_Service
            url: https://test-api-encryption-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Files_Magangment_Service
            url: https://test-api-files-magangment-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Garage_Service
            url: https://test-api-garage-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Mailing_Service
            url: https://test-api-mailing-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Membership_Service
            url: https://test-api-membership-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Parts_Service
            url: https://test-api-parts-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Vendor_Service
            url: https://test-api-vendor-service.pick-a-part.ca
            host: 178.16.134.117
          - service: Notification_Service
            url: https://test-api-notification-service.pick-a-part.ca
            host: 178.16.134.117

          # --- Host 195.35.9.105 (two services) ---
          - service: Managment_Service_Ca_Vds
            url: https://mgmt.api.yourdomain.com
            host: 195.35.9.105
          - service: Vendor_Service_Ca_Vds
            url: https://vendor-ca-vds.api.yourdomain.com
            host: 195.35.9.105

    env:
      SERVICE_DIR: ${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP (Composer)
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer:v2
          coverage: none

      # NEW: pick project composer.phar if present, and print version
      - name: Select Composer & show version
        id: comp
        working-directory: ${{ env.SERVICE_DIR }}
        shell: bash
        run: |
          if [ -f composer.phar ]; then
            echo "Using project composer.phar"
            echo "composer_bin=php composer.phar" >> "$GITHUB_OUTPUT"
            php composer.phar -V
          else
            echo "Using runner Composer"
            echo "composer_bin=composer" >> "$GITHUB_OUTPUT"
            composer -V
          fi

      - name: Install dependencies (no-dev)
        working-directory: ${{ env.SERVICE_DIR }}
        run: ${{ steps.comp.outputs.composer_bin }} install --no-dev --prefer-dist --optimize-autoloader --no-interaction

      - name: Exclude list for rsync
        run: |
          cat > exclude.txt <<'EOF'
          .git/
          .github/
          node_modules/
          tests/
          storage/logs/*
          storage/framework/cache/*
          storage/framework/sessions/*
          storage/framework/views/*
          .env
          .env.*
          EOF

      - name: Setup SSH key
        run: |
          echo "${{ secrets.CP_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Compute remote vars
        id: envs
        shell: bash
        run: |
          HOST="${{ matrix.host }}"
          USER="${{ matrix.user }}"
          BASE="${{ matrix.deploy_base }}"
          HOST="${HOST:-${{ secrets.CP_HOST }}}"
          USER="${USER:-${{ secrets.CP_USER }}}"
          BASE="${BASE:-${{ secrets.DEPLOY_BASE }}}"
          echo "host=$HOST" >> "$GITHUB_OUTPUT"
          echo "user=$USER" >> "$GITHUB_OUTPUT"
          echo "remote_dir=$BASE/${{ env.SERVICE_DIR }}" >> "$GITHUB_OUTPUT"

      - name: Rsync to remote
        run: |
          rsync -az --delete \
            -e "ssh -i key.pem -o StrictHostKeyChecking=no" \
            --exclude-from=exclude.txt \
            "./${SERVICE_DIR}/" \
            "${{ steps.envs.outputs.user }}@${{ steps.envs.outputs.host }}:${{ steps.envs.outputs.remote_dir }}/"

      - name: Remote artisan (optimize; migrations disabled)
        run: |
          SSH="ssh -i key.pem -o StrictHostKeyChecking=no ${{ steps.envs.outputs.user }}@${{ steps.envs.outputs.host }}"
          $SSH "bash -lc '
            set -e
            cd ${{ steps.envs.outputs.remote_dir }}

            PHP_CLI=php
            if ! command -v \$PHP_CLI >/dev/null 2>&1; then
              if [ -x /opt/cpanel/ea-php82/root/usr/bin/php ]; then
                PHP_CLI=/opt/cpanel/ea-php82/root/usr/bin/php
              fi
            fi

            mkdir -p storage/framework/{cache,sessions,views} bootstrap/cache
            chmod -R ug+rw storage bootstrap/cache || true

            \$PHP_CLI artisan down || true

            if [ ! -e public/storage ]; then \$PHP_CLI artisan storage:link || true; fi

            \$PHP_CLI artisan config:clear  || true
            \$PHP_CLI artisan route:clear   || true
            \$PHP_CLI artisan view:clear    || true
            \$PHP_CLI artisan optimize      || true

            echo \"Skipping DB migrations (deployment mode).\"

            if \$PHP_CLI artisan | grep -q \"queue:restart\"; then \$PHP_CLI artisan queue:restart || true; fi
            if \$PHP_CLI artisan | grep -q \"horizon\"; then \$PHP_CLI artisan horizon:terminate || true; fi

            \$PHP_CLI artisan up || true
          '"

      - name: Smoke check
        run: |
          curl -fsSL --max-time 25 "${{ matrix.url }}" >/dev/null || \
            (echo "Smoke check failed for ${{ matrix.url }}" && exit 1)
